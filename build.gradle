buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.2-3'
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.13'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

ext.simpleName = ''

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    group 'com.github.mibac138.argparser'
    def tagVersion = System.getenv('TRAVIS_TAG')
    if (tagVersion != null && !tagVersion.isEmpty()) {
        project.version = tagVersion
    } else {
        project.version = 'dev-' + System.getenv('TRAVIS_COMMIT')
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        compile 'org.jetbrains.kotlin:kotlin-stdlib:1.1.2-3'

        testCompile 'junit:junit:4.12'
        testCompile 'org.jetbrains.kotlin:kotlin-test-junit:1.1.2-3'
        testCompile 'org.mockito:mockito-core:2.7.21'
        testCompile 'com.nhaarman:mockito-kotlin:1.4.0'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
        main.kotlin.srcDirs += 'src/main/kotlin'
    }

    // argparser-core -> core
    ext.simpleName = project.name.substring(project.name.indexOf('-') + 1, project.name.size())

    dokka {
        outputFormat = 'javadoc'
        outputDirectory = "${rootProject.buildDir}/javadoc/$project.ext.simpleName"
        linkMapping {
            dir = 'src/main/java'
            url = "https://github.com/mibac138/ArgParser/blob/master/$project.ext.simpleName/src/main/java"
        }
        linkMapping {
            dir = 'src/main/kotlin'
            url = "https://github.com/mibac138/ArgParser/blob/master/$project.ext.simpleName/src/main/kotlin"
        }
    }

    task javadocJar(type: Jar, dependsOn: dokka) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    bintray {
        user = System.getenv("BINTRAY_USER")
        key = System.getenv("BINTRAY_KEY")
        pkg {
            repo = 'maven'
            name = 'ArgParser'
            vcsUrl = 'https://github.com/mibac138/ArgParser.git'
            version {
                name = project.version
                desc = "$project.name v$project.version"
                released = new Date()
                vcsTag = System.getenv("TRAVIS_TAG")
            }
        }


        publications = ['MyPublication']
    }

    def pomConfig = {
        licenses {
            license {
                name 'MIT License'
                url 'https://opensource.org/licenses/MIT'
            }

            developers {
                id 'Mibac'
                name 'Michał Bączkowski'
                email 'mibacpb@gmail.com'
            }
        }
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                groupId 'com.github.mibac138.argparser'
                artifactId project.name
                artifact sourcesJar
                artifact javadocJar

                pom.withXml {
                    def root = asNode()
                    root.appendNode('name', project.name)
                    root.appendNode('url', 'https://github.com/mibac138/argparser')

                    root.children().last() + pomConfig
                }
            }
        }
    }
}
